<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.dang.rocket.model.OrderActivityInfo">

	<resultMap id="RM_OrderActivityInfo" type="com.dang.rocket.model.OrderActivityInfo">
		<result property="id" column="id" />
		<result property="activityInfoId" column="activity_info_id" />
		<result property="orderId" column="order_id" />
		<result property="activityId" column="activity_id" />
		<result property="activityName" column="activity_name" />
		<result property="activityType" column="activity_type" />
		<result property="activityPriority" column="activity_priority" />
		<result property="creationDate" column="creation_date" />
		<result property="lastChangedDate" column="last_changed_date" />
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		id,activity_info_id,order_id,activity_id,activity_name,activity_type,activity_priority,creation_date,last_changed_date
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO order_activity_info (
        	id ,
        	activity_info_id ,
        	order_id ,
        	activity_id ,
        	activity_name ,
        	activity_type ,
        	activity_priority ,
        	creation_date ,
        	last_changed_date 
        ) VALUES (
        	#{id} ,
        	#{activityInfoId} ,
        	#{orderId} ,
        	#{activityId} ,
        	#{activityName} ,
        	#{activityType} ,
        	#{activityPriority} ,
        	#{creationDate} ,
        	#{lastChangedDate} 
        )
    ]]>
		<!-- oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName <selectKey resultType="java.lang.Long" 
			order="BEFORE" keyProperty="userId"> SELECT sequenceName.nextval AS ID FROM 
			DUAL </selectKey> -->
	</insert>


	<sql id="update_sql">
		<set>
			<if test="activityInfoId != null">
				activity_info_id = #{activityInfoId} ,
			</if>
			<if test="orderId != null">
				order_id = #{orderId} ,
			</if>
			<if test="activityId != null">
				activity_id = #{activityId} ,
			</if>
			<if test="activityName != null and activityName != ''">
				activity_name = #{activityName} ,
			</if>
			<if test="activityType != null">
				activity_type = #{activityType} ,
			</if>
			<if test="activityPriority != null">
				activity_priority = #{activityPriority} ,
			</if>
			<if test="creationDate != null">
				creation_date = #{creationDate} ,
			</if>
			<if test="lastChangedDate != null">
				last_changed_date = #{lastChangedDate}
			</if>
		</set>
	</sql>

	<update id="update">
		UPDATE order_activity_info
		<include refid="update_sql" />
		WHERE
		id = #{id}
	</update>

	<delete id="delete">
    <![CDATA[
        DELETE FROM order_activity_info WHERE
        id = #{id} 
    ]]>
	</delete>

	<select id="getById" resultMap="RM_OrderActivityInfo">
		SELECT
		<include refid="columns" />
	    <![CDATA[
		    FROM order_activity_info 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>

	<sql id="findPage_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
			<if test="id != null">
				AND id = #{id}
			</if>
			<if test="activityInfoId != null">
				AND activity_info_id = #{activityInfoId}
			</if>
			<if test="orderId != null">
				AND order_id = #{orderId}
			</if>
			<if test="activityId != null">
				AND activity_id = #{activityId}
			</if>
			<if test="activityName != null and activityName !=''">
				AND activity_name = #{activityName}
			</if>
			<if test="activityType != null">
				AND activity_type = #{activityType}
			</if>
			<if test="activityPriority != null">
				AND activity_priority = #{activityPriority}
			</if>
			<if test="creationDateBegin != null">
				AND creation_date >= #{creationDateBegin}
			</if>
			<if test="creationDateEnd != null">
				AND creation_date &lt;= #{creationDateEnd}
			</if>
			<if test="lastChangedDateBegin != null">
				AND last_changed_date >= #{lastChangedDateBegin}
			</if>
			<if test="lastChangedDateEnd != null">
				AND last_changed_date &lt;= #{lastChangedDateEnd}
			</if>
		</where>
	</sql>

	<select id="findPage_count" resultType="long">
		SELECT count(*) FROM order_activity_info
		<include refid="findPage_where" />
	</select>

	<!-- 分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页 因为分页查询将传 offset,pageSize,lastRows 
		三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现 -->
	<select id="findPage" resultMap="RM_OrderActivityInfo">
		SELECT
		<include refid="columns" />
		FROM order_activity_info
		<include refid="findPage_where" />

		<if test="sortColumns != null and sortColumns !=''">
			ORDER BY ${sortColumns}
		</if>
	</select>

	<select id="getByActivityInfoId" resultMap="RM_OrderActivityInfo"
		parameterType="java.lang.Long">
		SELECT
		<include refid="columns" />
	    <![CDATA[
	        FROM order_activity_info where activity_info_id = #{activityInfoId}
	    ]]>
	</select>


</mapper>

